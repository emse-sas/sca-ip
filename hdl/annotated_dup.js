var annotated_dup =
[
    [ "add_roundkey", "classadd__roundkey.html", "classadd__roundkey" ],
    [ "aes", "classaes.html", "classaes" ],
    [ "aes_fsm", "classaes__fsm.html", "classaes__fsm" ],
    [ "aes_round", "classaes__round.html", "classaes__round" ],
    [ "clock_mux", "classclock__mux.html", "classclock__mux" ],
    [ "coarse_block", "classcoarse__block.html", "classcoarse__block" ],
    [ "coarse_line", "classcoarse__line.html", "classcoarse__line" ],
    [ "fifo_counter", "classfifo__counter.html", "classfifo__counter" ],
    [ "fifo_ctrl", "classfifo__ctrl.html", "classfifo__ctrl" ],
    [ "fifo_fsm", "classfifo__fsm.html", "classfifo__fsm" ],
    [ "fifo_generator_0", "classfifo__generator__0.html", "classfifo__generator__0" ],
    [ "fine_block", "classfine__block.html", "classfine__block" ],
    [ "fine_line", "classfine__line.html", "classfine__line" ],
    [ "gamma", "classgamma.html", "classgamma" ],
    [ "key_expander", "classkey__expander.html", "classkey__expander" ],
    [ "key_expansion", "classkey__expansion.html", "classkey__expansion" ],
    [ "key_expansion_fsm", "classkey__expansion__fsm.html", "classkey__expansion__fsm" ],
    [ "key_schedule", "classkey__schedule.html", "classkey__schedule" ],
    [ "klein_top", "classklein__top.html", "classklein__top" ],
    [ "mcrypton_top", "classmcrypton__top.html", "classmcrypton__top" ],
    [ "mix_columns", "classmix__columns.html", "classmix__columns" ],
    [ "mix_prod", "classmix__prod.html", "classmix__prod" ],
    [ "mul_poly", "classmul__poly.html", "classmul__poly" ],
    [ "perm_layer", "classperm__layer.html", "classperm__layer" ],
    [ "pi", "classpi.html", "classpi" ],
    [ "present_S_AXI_top", "classpresent___s___a_x_i__top.html", "classpresent___s___a_x_i__top" ],
    [ "present_top", "classpresent__top.html", "classpresent__top" ],
    [ "ro", "classro.html", "classro" ],
    [ "ro_bank", "classro__bank.html", "classro__bank" ],
    [ "ro_coder", "classro__coder.html", "classro__coder" ],
    [ "ro_exp_sum", "classro__exp__sum.html", "classro__exp__sum" ],
    [ "ro_output", "classro__output.html", "classro__output" ],
    [ "rotate_mix_nibbles", "classrotate__mix__nibbles.html", "classrotate__mix__nibbles" ],
    [ "round_counter", "classround__counter.html", "classround__counter" ],
    [ "sampling_block", "classsampling__block.html", "classsampling__block" ],
    [ "sampling_line", "classsampling__line.html", "classsampling__line" ],
    [ "sbox", "classsbox.html", "classsbox" ],
    [ "sbox0", "classsbox0.html", "classsbox0" ],
    [ "sbox1", "classsbox1.html", "classsbox1" ],
    [ "sbox2", "classsbox2.html", "classsbox2" ],
    [ "sbox3", "classsbox3.html", "classsbox3" ],
    [ "shift_rows", "classshift__rows.html", "classshift__rows" ],
    [ "state_diff", "classstate__diff.html", "classstate__diff" ],
    [ "state_reg", "classstate__reg.html", "classstate__reg" ],
    [ "sub_bytes", "classsub__bytes.html", "classsub__bytes" ],
    [ "sub_layer", "classsub__layer.html", "classsub__layer" ],
    [ "sub_nibbles", "classsub__nibbles.html", "classsub__nibbles" ],
    [ "tau", "classtau.html", "classtau" ],
    [ "tdc", "classtdc.html", "classtdc" ],
    [ "tdc_bank", "classtdc__bank.html", "classtdc__bank" ],
    [ "tdc_exp_sum", "classtdc__exp__sum.html", "classtdc__exp__sum" ],
    [ "tdc_output", "classtdc__output.html", "classtdc__output" ]
];